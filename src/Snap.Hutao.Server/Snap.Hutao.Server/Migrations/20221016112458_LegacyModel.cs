// <auto-generated />
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace Snap.Hutao.Server.Migrations
{
    public partial class LegacyModel : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.AlterDatabase()
                .Annotation("MySql:CharSet", "utf8mb4");

            migrationBuilder.CreateTable(
                name: "records",
                columns: table => new
                {
                    PrimaryId = table.Column<long>(type: "bigint", nullable: false)
                        .Annotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn),
                    Uid = table.Column<string>(type: "varchar(9)", maxLength: 9, nullable: false)
                        .Annotation("MySql:CharSet", "utf8mb4"),
                    Uploader = table.Column<string>(type: "longtext", nullable: false)
                        .Annotation("MySql:CharSet", "utf8mb4"),
                    UploadTime = table.Column<long>(type: "bigint", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_records", x => x.PrimaryId);
                })
                .Annotation("MySql:CharSet", "utf8mb4");

            migrationBuilder.CreateTable(
                name: "request_statistics",
                columns: table => new
                {
                    PrimaryId = table.Column<long>(type: "bigint", nullable: false)
                        .Annotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn),
                    UserAgent = table.Column<string>(type: "longtext", nullable: false)
                        .Annotation("MySql:CharSet", "utf8mb4"),
                    Path = table.Column<string>(type: "longtext", nullable: false)
                        .Annotation("MySql:CharSet", "utf8mb4"),
                    Count = table.Column<long>(type: "bigint", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_request_statistics", x => x.PrimaryId);
                })
                .Annotation("MySql:CharSet", "utf8mb4");

            migrationBuilder.CreateTable(
                name: "spiral_abysses_statistics",
                columns: table => new
                {
                    PrimaryId = table.Column<long>(type: "bigint", nullable: false)
                        .Annotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn),
                    ScheduleId = table.Column<int>(type: "int", nullable: false),
                    Name = table.Column<string>(type: "longtext", nullable: false)
                        .Annotation("MySql:CharSet", "utf8mb4"),
                    Data = table.Column<string>(type: "longtext", nullable: false)
                        .Annotation("MySql:CharSet", "utf8mb4")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_spiral_abysses_statistics", x => x.PrimaryId);
                })
                .Annotation("MySql:CharSet", "utf8mb4");

            migrationBuilder.CreateTable(
                name: "avatars",
                columns: table => new
                {
                    PrimaryId = table.Column<long>(type: "bigint", nullable: false)
                        .Annotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn),
                    RecordId = table.Column<long>(type: "bigint", nullable: false),
                    AvatarId = table.Column<int>(type: "int", nullable: false),
                    WeaponId = table.Column<int>(type: "int", nullable: false),
                    ReliquarySet = table.Column<string>(type: "longtext", nullable: false)
                        .Annotation("MySql:CharSet", "utf8mb4"),
                    ActivedConstellationNumber = table.Column<int>(type: "int", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_avatars", x => x.PrimaryId);
                    table.ForeignKey(
                        name: "FK_avatars_records_RecordId",
                        column: x => x.RecordId,
                        principalTable: "records",
                        principalColumn: "PrimaryId",
                        onDelete: ReferentialAction.Cascade);
                })
                .Annotation("MySql:CharSet", "utf8mb4");

            migrationBuilder.CreateTable(
                name: "spiral_abysses",
                columns: table => new
                {
                    PrimaryId = table.Column<long>(type: "bigint", nullable: false)
                        .Annotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn),
                    RecordId = table.Column<long>(type: "bigint", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_spiral_abysses", x => x.PrimaryId);
                    table.ForeignKey(
                        name: "FK_spiral_abysses_records_RecordId",
                        column: x => x.RecordId,
                        principalTable: "records",
                        principalColumn: "PrimaryId",
                        onDelete: ReferentialAction.Cascade);
                })
                .Annotation("MySql:CharSet", "utf8mb4");

            migrationBuilder.CreateTable(
                name: "damage_ranks",
                columns: table => new
                {
                    PrimaryId = table.Column<long>(type: "bigint", nullable: false)
                        .Annotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn),
                    SpiralAbyssId = table.Column<long>(type: "bigint", nullable: false),
                    AvatarId = table.Column<int>(type: "int", nullable: false),
                    Value = table.Column<int>(type: "int", nullable: false),
                    Uid = table.Column<string>(type: "longtext", nullable: false)
                        .Annotation("MySql:CharSet", "utf8mb4")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_damage_ranks", x => x.PrimaryId);
                    table.ForeignKey(
                        name: "FK_damage_ranks_spiral_abysses_SpiralAbyssId",
                        column: x => x.SpiralAbyssId,
                        principalTable: "spiral_abysses",
                        principalColumn: "PrimaryId",
                        onDelete: ReferentialAction.Cascade);
                })
                .Annotation("MySql:CharSet", "utf8mb4");

            migrationBuilder.CreateTable(
                name: "spiral_abysses_floors",
                columns: table => new
                {
                    PrimaryId = table.Column<long>(type: "bigint", nullable: false)
                        .Annotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn),
                    SpiralAbyssId = table.Column<long>(type: "bigint", nullable: false),
                    Index = table.Column<int>(type: "int", nullable: false),
                    Star = table.Column<int>(type: "int", nullable: false),
                    Levels = table.Column<string>(type: "TEXT", nullable: false)
                        .Annotation("MySql:CharSet", "utf8mb4")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_spiral_abysses_floors", x => x.PrimaryId);
                    table.ForeignKey(
                        name: "FK_spiral_abysses_floors_spiral_abysses_SpiralAbyssId",
                        column: x => x.SpiralAbyssId,
                        principalTable: "spiral_abysses",
                        principalColumn: "PrimaryId",
                        onDelete: ReferentialAction.Cascade);
                })
                .Annotation("MySql:CharSet", "utf8mb4");

            migrationBuilder.CreateTable(
                name: "take_damage_ranks",
                columns: table => new
                {
                    PrimaryId = table.Column<long>(type: "bigint", nullable: false)
                        .Annotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn),
                    SpiralAbyssId = table.Column<long>(type: "bigint", nullable: false),
                    AvatarId = table.Column<int>(type: "int", nullable: false),
                    Value = table.Column<int>(type: "int", nullable: false),
                    Uid = table.Column<string>(type: "longtext", nullable: false)
                        .Annotation("MySql:CharSet", "utf8mb4")
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_take_damage_ranks", x => x.PrimaryId);
                    table.ForeignKey(
                        name: "FK_take_damage_ranks_spiral_abysses_SpiralAbyssId",
                        column: x => x.SpiralAbyssId,
                        principalTable: "spiral_abysses",
                        principalColumn: "PrimaryId",
                        onDelete: ReferentialAction.Cascade);
                })
                .Annotation("MySql:CharSet", "utf8mb4");

            migrationBuilder.CreateIndex(
                name: "IX_avatars_RecordId",
                table: "avatars",
                column: "RecordId");

            migrationBuilder.CreateIndex(
                name: "IX_damage_ranks_SpiralAbyssId",
                table: "damage_ranks",
                column: "SpiralAbyssId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_damage_ranks_Value",
                table: "damage_ranks",
                column: "Value");

            migrationBuilder.CreateIndex(
                name: "IX_spiral_abysses_RecordId",
                table: "spiral_abysses",
                column: "RecordId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_spiral_abysses_floors_SpiralAbyssId",
                table: "spiral_abysses_floors",
                column: "SpiralAbyssId");

            migrationBuilder.CreateIndex(
                name: "IX_take_damage_ranks_SpiralAbyssId",
                table: "take_damage_ranks",
                column: "SpiralAbyssId",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_take_damage_ranks_Value",
                table: "take_damage_ranks",
                column: "Value");
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "avatars");

            migrationBuilder.DropTable(
                name: "damage_ranks");

            migrationBuilder.DropTable(
                name: "request_statistics");

            migrationBuilder.DropTable(
                name: "spiral_abysses_floors");

            migrationBuilder.DropTable(
                name: "spiral_abysses_statistics");

            migrationBuilder.DropTable(
                name: "take_damage_ranks");

            migrationBuilder.DropTable(
                name: "spiral_abysses");

            migrationBuilder.DropTable(
                name: "records");
        }
    }
}
